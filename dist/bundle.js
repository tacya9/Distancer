(()=>{"use strict";const e="distancer.settings",t="distancer.isActive",a="distancerId",n="participantIcon",i="participantColor",s="participantName",c="isActiveScreen",r="expirationTime",l="updateInterval",o="maxDistanceRatio",d="isNowDate",u="idSet";class p{constructor(e){const{name:t="",isActive:a=!1,icon:n="",color:i="",distToHead:s=null,distance:c=null,current:r={},prev:l={},sync:o={}}=e;this.name=t,this.isActive=a,this.icon=n,this.color=i,this.distToHead=s,this.distance=c,this.current={latitude:r.latitude?r.latitude:null,longitude:r.longitude?r.longitude:null,speed:r.speed?r.speed:null,altitude:r.altitude?r.altitude:null,accuracy:r.accuracy?r.accuracy:null,timestamp:r.timestamp?r.timestamp:null},this.prev=l,this.sync=o}}let m=-1;function h(e,t,n){const i=C(a);L?L.ref(e).set(t).then((()=>{const e=+new Date,a=-1===m?0:e-m;m=e,console.log(a,"Данные GPS отправлены:",t),L.ref(M(i)).set(e)})).catch((e=>console.error("Ошибка отправки данных:",e))).finally(n):console.warn("Firebase Realtime Database не инициализирован.")}function f(e){if(e>=0){const t=2;return Math.round(e*t)}return"---"}function v(e){if(e>=0){const t=C(o),a=10*t,n=f(e)*t;return n>a?n:a}return"---"}const g={},b=e=>`${u}/${e}`,y=(e,t)=>`${u}/${e}/participant/${t}`,M=e=>`${u}/${e}/lastUpdate`,I={apiKey:"AIzaSyClTP8GkjmYRYv0vdARiWh6Gmdt2Ue_BZQ",authDomain:"distancer-4b3cf.firebaseapp.com",projectId:"distancer-4b3cf",storageBucket:"distancer-4b3cf.firebasestorage.app",messagingSenderId:"341906421047",appId:"1:341906421047:web:5f8260f1bfd4e2870f16b2",databaseURL:"https://distancer-4b3cf-default-rtdb.europe-west1.firebasedatabase.app",measurementId:"G-PE0K93QP5Y"};let k,L,E,_=-1,w=0;try{k=firebase.initializeApp(I),L=firebase.database(k)}catch(e){console.error("Ошибка инициализации Firebase:",e)}function x(e){return JSON.parse(localStorage.getItem(e))}function T(e,t){localStorage.setItem(e,JSON.stringify(t)),$()}function $(){const t=A(),n=x(e),i=document.getElementById("runButton"),c=document.getElementById("distancerId"),r=document.getElementById("participantName");i.innerText=t?"СТОП":"СТАРТ",n&&Object.keys(n).forEach((e=>{switch(e){case a:c.innerText=n[e];break;case s:r.innerText=n[e]}}))}function A(){return!!x(t)}function C(t,a=null){const n=x(e);return n&&void 0!==n[t]?n[t]:a}function N(e){T(t,e)}const D=document.getElementById("runButton"),H=document.getElementById("openModalButton"),P=document.getElementById("closeModalButton"),B=document.getElementById("modal"),S=document.getElementById("participantList"),F=new class{constructor(){this.watchPosId=null,this.intervalId=null,this.element=this.createParticipants()}createParticipants(){const e=document.createElement("ul");return e.classList.add("c-layout__list"),e}run(e){if(e){const e=function(e){if("geolocation"in navigator)return{watchPosId:navigator.geolocation.watchPosition((c=>{if(c.timestamp-w<+C(l))return;const r=C(a),o=C(s);if(!r||!o)return console.log("distancerId or participantName are not defined in the local storage"),void T(t,!1);const{latitude:u,longitude:m,speed:f,altitude:v,accuracy:b}=c.coords,M=+new Date,I=new p({isActive:!0,icon:C(n),color:C(i),current:{latitude:+u.toFixed(6),longitude:+m.toFixed(6),speed:null!==f?+f.toFixed(2):0,altitude:null!==v?+v.toFixed(0):0,accuracy:+b.toFixed(0),timestamp:C(d)?M:c.timestamp},prev:g.participant&&g.participant[o]?g.participant[o].current:{}});w=C(d)?M:c.timestamp,h(y(r,o),I,e)}),(e=>{console.error("Ошибка при получении геопозиции:",e.message)}),{enableHighAccuracy:!0,maximumAge:0,timeout:+C(l)}),intervalId:setInterval((()=>{e()}),+C(l))};alert("Геолокация не поддерживается этим браузером.")}((()=>function(e){const t=C(a);L?L.ref(b(t)).get().then((t=>{if(t.exists()){const a=+new Date,n=a-_,i=t.val();g.lastUpdate=i.lastUpdate,g.participant=i.participant,e(i),console.log(n,"fetchData: data received"),_=a}else console.log("fetchData: No data available")})):console.warn("Firebase Realtime Database не инициализирован для получения данных.")}(this.update.bind(this))));this.watchPosId=e.watchPosId,this.intervalId=e.intervalId}else navigator.geolocation.clearWatch(this.watchPosId),clearInterval(this.intervalId),this.element.innerHTML=""}update(e){const t=function(e){return e.map(((t,a)=>{const n=a>0?t.distToHead-e[a-1].distToHead:void 0;return{isActive:t.isActive,distance:n>=0?n:"---",minDistance:f(t.current?.speed),maxDistance:v(t.current?.speed),icon:t.icon,color:t.color,name:t.name,accuracy:t.current?.accuracy,speed:t.current?.speed>=0?Math.round(3.6*t.current.speed):"---",altitude:t.current?.altitude,timestamp:t.current?.timestamp,latitude:t.current?.latitude,longitude:t.current?.longitude}}))}(function(e){const t=e.participant,a=C(s),n=Object.keys(t).filter((e=>e===a||t[e].isActive));if(!n.length)return[];let i=0;const c=n.map((e=>(t[e].current?.timestamp>i&&(i=t[e].current.timestamp),new p({name:e,isActive:t[e].isActive,icon:t[e].icon,color:t[e].color,distToHead:0,distance:null,current:t[e].current,prev:t[e].prev,sync:t[e].current?{latitude:null,longitude:null,speed:t[e].current.speed,altitude:t[e].current.altitude,accuracy:t[e].current.accuracy,timestamp:0}:{}}))));c.sort(((e,t)=>e.name.localeCompare(t.name))),c.forEach((e=>{const t=Object.keys(e.prev).length>0?function({prevTimeMs:e,prevCoords:t,currTimeMs:a,currCoords:n,futureTimeMs:i}){const s=6371e3,c=e=>e*Math.PI/180,r=e=>180*e/Math.PI,l=c(t.latitude),o=c(t.longitude),d=c(n.latitude),u=c(n.longitude),p=(a-e)/1e3;if(0===p)return n;const m=d-l,h=u-o,f=Math.sin(m/2)**2+Math.cos(l)*Math.cos(d)*Math.sin(h/2)**2,v=s*(2*Math.atan2(Math.sqrt(f),Math.sqrt(1-f))),g=Math.sin(h)*Math.cos(d),b=Math.cos(l)*Math.sin(d)-Math.sin(l)*Math.cos(d)*Math.cos(h),y=Math.atan2(g,b),M=v/p*((i-a)/1e3)/s,I=Math.asin(Math.sin(d)*Math.cos(M)+Math.cos(d)*Math.sin(M)*Math.cos(y)),k=u+Math.atan2(Math.sin(y)*Math.sin(M)*Math.cos(d),Math.cos(M)-Math.sin(d)*Math.sin(I));return{latitude:r(I),longitude:r(k)}}({prevTimeMs:e.prev.timestamp,prevCoords:{latitude:e.prev.latitude,longitude:e.prev.longitude},currTimeMs:e.current.timestamp,currCoords:{latitude:e.current.latitude,longitude:e.current.longitude},futureTimeMs:i}):{latitude:e.current.latitude,longitude:e.current.longitude};e.sync.timestamp=i,e.sync.latitude=t.latitude?+t.latitude.toFixed(6):null,e.sync.longitude=t.longitude?+t.longitude.toFixed(6):null}));const r=c[0],l=c.slice(1);return l.forEach((e=>{const t={latitude:r.sync.latitude,longitude:r.sync.longitude},a={latitude:e.sync.latitude,longitude:e.sync.longitude};e.distToHead=function(e,t){const a=e=>e*Math.PI/180,n=a(e.latitude),i=a(e.longitude),s=a(t.latitude),c=s-n,r=a(t.longitude)-i,l=Math.sin(c/2)**2+Math.cos(n)*Math.cos(s)*Math.sin(r/2)**2,o=2*Math.atan2(Math.sqrt(l),Math.sqrt(1-l));return Math.round(6371e3*o)}(t,a)})),l.sort(((e,t)=>e.distToHead-t.distToHead)),[r,...l]}(e));this.element.innerHTML="",t.forEach(((e,t)=>{const a=document.createElement("li"),n=document.createElement("div"),i=+new Date-e.timestamp;if(a.classList.add("c-layout__info"),t>0){const t=document.createElement("div");t.classList.add("c-distance"),t.innerHTML=`\n                    <div class="c-distance__title">distance(m)</div>\n                    <div class="c-distance__meanings">\n                        <div class="c-distance__min">${e.minDistance}</div>\n                        <div class="c-distance__char"><</div>\n                        <div class="c-distance__real">${e.distance}</div>\n                        <div class="c-distance__char"><</div>\n                        <div class="c-distance__max">${e.maxDistance}</div>\n                    </div>\n                `,e.distance>e.maxDistance&&t.classList.add("m-danger"),a.appendChild(t)}var c;n.classList.add("c-participant"),n.innerHTML=`\n                <div class="c-participant__icon"><i class="fa-solid fa-${e.icon}"></i></div>\n                <div class="c-participant__name">${e.name}</div>\n                <div class="c-participant__accuracy">±${e.accuracy}</div>\n                <div class="c-participant__speed">${e.speed}</div>\n                <div class="c-participant__altitude">${e.altitude}</div>\n            `,e.name!==C(s)&&i>1e3*C(r)/2&&n.classList.add("m-offline"),e.color&&(n.style.background=e.color,c=(c=e.color).replace(/^#/,""),.299*parseInt(c.substring(0,2),16)+.587*parseInt(c.substring(2,4),16)+.114*parseInt(c.substring(4,6),16)<128&&n.classList.add("m-dark-mode")),a.appendChild(n),this.element.appendChild(a),e.name!==C(s)&&e.isActive&&i>1e3*C(r)&&this.disableParticipant(e.name)}))}disableParticipant(e){var t;h((t=C(a),`${u}/${t}/participant/${e}/isActive`),!1)}render(e){return e?e.appendChild(this.element):this.element}},V=document.getElementById("settingsForm"),R=new class{constructor(e){const{settings:t,onSubmitCallback:a}=e;this.settings=t,this.onSubmitCallback=a,this.element=this.createForm()}createForm(){const t=document.createElement("form"),i=document.createElement("button"),c=document.createElement("label"),r=document.createElement("input");return this.settings.forEach(((e,a)=>{const n=document.createElement("label"),i=document.createElement("input");i.type=e.type,i.classList.add("form-control"),i.classList.add("h-auto"),"checkbox"===e.type?(i.checked=C(e.propName,e.defaultValue),i.classList.add("form-check-input"),i.classList.add("m-0")):i.value=C(e.propName,e.defaultValue),n.classList.add("input-group"),n.classList.add("mb-3"),n.innerHTML=`<span class="input-group-text">${e.label}</span>`,n.appendChild(i),t.appendChild(n),e.input=i})),i.type="submit",i.innerText="Применить",i.classList.add("btn"),i.classList.add("btn-primary"),i.classList.add("float-end"),r.type="checkbox",r.checked=!1,r.classList.add("c-dev-settings-toggle"),c.classList.add("form-switch"),c.innerHTML='<input type="checkbox" class="c-dev-settings-toggle form-check-input" /> Углубленные настройки',t.appendChild(c),t.setAttribute("novalidate",""),t.appendChild(i),t.addEventListener("submit",(t=>{t.preventDefault();const i={},c=[a,s];let r=0;this.settings.forEach((e=>{var t;i[e.propName]="checkbox"===e.input.type?e.input.checked:e.input.value,c.includes(e.propName)&&(t=e.input.value,/[.#$[\]]/.test(t))&&++r})),r?alert("Поля не могут содержать символы:\n. # $ [ ]"):(function(t){const n=C(a),i=C(s);n===t[a]&&i!==t[s]&&L.ref(y(n,i)).remove().then((e=>{console.log("The old participant name has been removed successfully!",e)})).catch((e=>{console.log("The old participant name has not been removed")})),T(e,t)}(i),L.ref(y(C(a),C(s))).set(new p({name:C(s),isActive:!0,icon:C(n)})),L.ref(M(C(a))).set(+new Date),this.runHandlers(),"function"==typeof this.onSubmitCallback&&this.onSubmitCallback())})),this.runHandlers(),t}runHandlers(){this.settings.forEach((e=>{e.onApply&&e.onApply()}))}render(e){return e?e.appendChild(this.element):this.element}}({settings:[{propName:a,type:"text",label:"Идентификатор"},{propName:n,type:"text",label:'<a href="https://fontawesome.com/search?o=r&ic=free&s=solid&ip=classic" target="_blank">Название иконки</a>',defaultValue:"car"},{propName:i,type:"color",label:"Цвет",defaultValue:"#ffffff"},{propName:s,type:"text",label:"Имя"},{propName:c,type:"checkbox",label:"Экран всегда включен",onApply:function(){C([c])?E||(async()=>{try{E=await navigator.wakeLock.request("screen"),console.log("Wake Lock активирован!"),E.addEventListener("release",(()=>{console.log("Wake Lock был отпущен.")}))}catch(e){console.error(`${e.name}, ${e.message}`)}})().finally((()=>{console.log("finally >>> requestWakeLock")})):E&&(async()=>{E&&(await E.release(),E=null,console.log("Wake Lock отпущен пользователем."))})().finally((()=>{console.log("finally >>> releaseWakeLock")}))}},{propName:r,type:"number",label:"Макс.вр отобр неак.уч, сек",defaultValue:15},{propName:l,type:"number",label:"Время обновления данных, мс",defaultValue:2e3},{propName:o,type:"number",label:"Коэф. макс. дистанции",defaultValue:2},{propName:d,type:"checkbox",label:"Учесть вр.погрешность",defaultValue:!1}],onSubmitCallback(){F.run(!1),N(!1),B.classList.remove("show")}});D.addEventListener("click",(()=>{const e=!A();F.run(e),N(e)})),H.addEventListener("click",(()=>{B.classList.add("show")})),P.addEventListener("click",(()=>{B.classList.remove("show")})),R.render(V),F.render(S),N(!1),$(),function(){const e=18e5;setInterval((()=>{L.ref(u).get().then((t=>{if(t.exists()){const a=+new Date,n=t.val();Object.keys(n).filter((t=>a-n[t].lastUpdate>e)).forEach((e=>{L.ref(b(e)).remove().then((()=>{console.log(`The distancer "${e}" has been cleaned`)}))}))}else console.log("FIREBASE_ID_SET: No data available to clear")}))}),e)}()})();